call javaapi#namespace('java.awt.geom')

call javaapi#class('AffineTransform', '', [
  \ javaapi#method(1,'TYPE_IDENTITY', '', 'int'),
  \ javaapi#method(1,'TYPE_TRANSLATION', '', 'int'),
  \ javaapi#method(1,'TYPE_UNIFORM_SCALE', '', 'int'),
  \ javaapi#method(1,'TYPE_GENERAL_SCALE', '', 'int'),
  \ javaapi#method(1,'TYPE_MASK_SCALE', '', 'int'),
  \ javaapi#method(1,'TYPE_FLIP', '', 'int'),
  \ javaapi#method(1,'TYPE_QUADRANT_ROTATION', '', 'int'),
  \ javaapi#method(1,'TYPE_GENERAL_ROTATION', '', 'int'),
  \ javaapi#method(1,'TYPE_MASK_ROTATION', '', 'int'),
  \ javaapi#method(1,'TYPE_GENERAL_TRANSFORM', '', 'int'),
  \ javaapi#method(0,'AffineTransform(', ')', ''),
  \ javaapi#method(0,'AffineTransform(', 'AffineTransform)', ''),
  \ javaapi#method(0,'AffineTransform(', 'float, float, float, float, float, float)', ''),
  \ javaapi#method(0,'AffineTransform(', 'float[])', ''),
  \ javaapi#method(0,'AffineTransform(', 'double, double, double, double, double, double)', ''),
  \ javaapi#method(0,'AffineTransform(', 'double[])', ''),
  \ javaapi#method(1,'getTranslateInstance(', 'double, double)', 'AffineTransform'),
  \ javaapi#method(1,'getRotateInstance(', 'double)', 'AffineTransform'),
  \ javaapi#method(1,'getRotateInstance(', 'double, double, double)', 'AffineTransform'),
  \ javaapi#method(1,'getRotateInstance(', 'double, double)', 'AffineTransform'),
  \ javaapi#method(1,'getRotateInstance(', 'double, double, double, double)', 'AffineTransform'),
  \ javaapi#method(1,'getQuadrantRotateInstance(', 'int)', 'AffineTransform'),
  \ javaapi#method(1,'getQuadrantRotateInstance(', 'int, double, double)', 'AffineTransform'),
  \ javaapi#method(1,'getScaleInstance(', 'double, double)', 'AffineTransform'),
  \ javaapi#method(1,'getShearInstance(', 'double, double)', 'AffineTransform'),
  \ javaapi#method(0,'getType(', ')', 'int'),
  \ javaapi#method(0,'getDeterminant(', ')', 'double'),
  \ javaapi#method(0,'getMatrix(', 'double[])', 'void'),
  \ javaapi#method(0,'getScaleX(', ')', 'double'),
  \ javaapi#method(0,'getScaleY(', ')', 'double'),
  \ javaapi#method(0,'getShearX(', ')', 'double'),
  \ javaapi#method(0,'getShearY(', ')', 'double'),
  \ javaapi#method(0,'getTranslateX(', ')', 'double'),
  \ javaapi#method(0,'getTranslateY(', ')', 'double'),
  \ javaapi#method(0,'translate(', 'double, double)', 'void'),
  \ javaapi#method(0,'rotate(', 'double)', 'void'),
  \ javaapi#method(0,'rotate(', 'double, double, double)', 'void'),
  \ javaapi#method(0,'rotate(', 'double, double)', 'void'),
  \ javaapi#method(0,'rotate(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,'quadrantRotate(', 'int)', 'void'),
  \ javaapi#method(0,'quadrantRotate(', 'int, double, double)', 'void'),
  \ javaapi#method(0,'scale(', 'double, double)', 'void'),
  \ javaapi#method(0,'shear(', 'double, double)', 'void'),
  \ javaapi#method(0,'setToIdentity(', ')', 'void'),
  \ javaapi#method(0,'setToTranslation(', 'double, double)', 'void'),
  \ javaapi#method(0,'setToRotation(', 'double)', 'void'),
  \ javaapi#method(0,'setToRotation(', 'double, double, double)', 'void'),
  \ javaapi#method(0,'setToRotation(', 'double, double)', 'void'),
  \ javaapi#method(0,'setToRotation(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,'setToQuadrantRotation(', 'int)', 'void'),
  \ javaapi#method(0,'setToQuadrantRotation(', 'int, double, double)', 'void'),
  \ javaapi#method(0,'setToScale(', 'double, double)', 'void'),
  \ javaapi#method(0,'setToShear(', 'double, double)', 'void'),
  \ javaapi#method(0,'setTransform(', 'AffineTransform)', 'void'),
  \ javaapi#method(0,'setTransform(', 'double, double, double, double, double, double)', 'void'),
  \ javaapi#method(0,'concatenate(', 'AffineTransform)', 'void'),
  \ javaapi#method(0,'preConcatenate(', 'AffineTransform)', 'void'),
  \ javaapi#method(0,'createInverse(', ') throws NoninvertibleTransformException', 'AffineTransform'),
  \ javaapi#method(0,'invert(', ') throws NoninvertibleTransformException', 'void'),
  \ javaapi#method(0,'transform(', 'Point2D, Point2D)', 'Point2D'),
  \ javaapi#method(0,'transform(', 'Point2D[], int, Point2D[], int, int)', 'void'),
  \ javaapi#method(0,'transform(', 'float[], int, float[], int, int)', 'void'),
  \ javaapi#method(0,'transform(', 'double[], int, double[], int, int)', 'void'),
  \ javaapi#method(0,'transform(', 'float[], int, double[], int, int)', 'void'),
  \ javaapi#method(0,'transform(', 'double[], int, float[], int, int)', 'void'),
  \ javaapi#method(0,'inverseTransform(', 'Point2D, Point2D) throws NoninvertibleTransformException', 'Point2D'),
  \ javaapi#method(0,'inverseTransform(', 'double[], int, double[], int, int) throws NoninvertibleTransformException', 'void'),
  \ javaapi#method(0,'deltaTransform(', 'Point2D, Point2D)', 'Point2D'),
  \ javaapi#method(0,'deltaTransform(', 'double[], int, double[], int, int)', 'void'),
  \ javaapi#method(0,'createTransformedShape(', 'Shape)', 'Shape'),
  \ javaapi#method(0,'toString(', ')', 'String'),
  \ javaapi#method(0,'isIdentity(', ')', 'boolean'),
  \ javaapi#method(0,'clone(', ')', 'Object'),
  \ javaapi#method(0,'hashCode(', ')', 'int'),
  \ javaapi#method(0,'equals(', 'Object)', 'boolean'),
  \ ])

call javaapi#class('Arc2D', 'RectangularShape', [
  \ javaapi#method(1,'OPEN', '', 'int'),
  \ javaapi#method(1,'CHORD', '', 'int'),
  \ javaapi#method(1,'PIE', '', 'int'),
  \ javaapi#method(0,'getAngleStart(', ')', 'double'),
  \ javaapi#method(0,'getAngleExtent(', ')', 'double'),
  \ javaapi#method(0,'getArcType(', ')', 'int'),
  \ javaapi#method(0,'getStartPoint(', ')', 'Point2D'),
  \ javaapi#method(0,'getEndPoint(', ')', 'Point2D'),
  \ javaapi#method(0,'setArc(', 'double, double, double, double, double, double, int)', 'void'),
  \ javaapi#method(0,'setArc(', 'Point2D, Dimension2D, double, double, int)', 'void'),
  \ javaapi#method(0,'setArc(', 'Rectangle2D, double, double, int)', 'void'),
  \ javaapi#method(0,'setArc(', 'Arc2D)', 'void'),
  \ javaapi#method(0,'setArcByCenter(', 'double, double, double, double, double, int)', 'void'),
  \ javaapi#method(0,'setArcByTangent(', 'Point2D, Point2D, Point2D, double)', 'void'),
  \ javaapi#method(0,'setAngleStart(', 'double)', 'void'),
  \ javaapi#method(0,'setAngleExtent(', 'double)', 'void'),
  \ javaapi#method(0,'setAngleStart(', 'Point2D)', 'void'),
  \ javaapi#method(0,'setAngles(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,'setAngles(', 'Point2D, Point2D)', 'void'),
  \ javaapi#method(0,'setArcType(', 'int)', 'void'),
  \ javaapi#method(0,'setFrame(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,'getBounds2D(', ')', 'Rectangle2D'),
  \ javaapi#method(0,'containsAngle(', 'double)', 'boolean'),
  \ javaapi#method(0,'contains(', 'double, double)', 'boolean'),
  \ javaapi#method(0,'intersects(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'contains(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'contains(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,'getPathIterator(', 'AffineTransform)', 'PathIterator'),
  \ javaapi#method(0,'hashCode(', ')', 'int'),
  \ javaapi#method(0,'equals(', 'Object)', 'boolean'),
  \ ])

call javaapi#class('ArcIterator', '', [
  \ javaapi#method(0,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,'next(', ')', 'void'),
  \ javaapi#method(0,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('Area', '', [
  \ javaapi#method(0,'Area(', ')', ''),
  \ javaapi#method(0,'Area(', 'Shape)', ''),
  \ javaapi#method(0,'add(', 'Area)', 'void'),
  \ javaapi#method(0,'subtract(', 'Area)', 'void'),
  \ javaapi#method(0,'intersect(', 'Area)', 'void'),
  \ javaapi#method(0,'exclusiveOr(', 'Area)', 'void'),
  \ javaapi#method(0,'reset(', ')', 'void'),
  \ javaapi#method(0,'isEmpty(', ')', 'boolean'),
  \ javaapi#method(0,'isPolygonal(', ')', 'boolean'),
  \ javaapi#method(0,'isRectangular(', ')', 'boolean'),
  \ javaapi#method(0,'isSingular(', ')', 'boolean'),
  \ javaapi#method(0,'getBounds2D(', ')', 'Rectangle2D'),
  \ javaapi#method(0,'getBounds(', ')', 'Rectangle'),
  \ javaapi#method(0,'clone(', ')', 'Object'),
  \ javaapi#method(0,'equals(', 'Area)', 'boolean'),
  \ javaapi#method(0,'transform(', 'AffineTransform)', 'void'),
  \ javaapi#method(0,'createTransformedArea(', 'AffineTransform)', 'Area'),
  \ javaapi#method(0,'contains(', 'double, double)', 'boolean'),
  \ javaapi#method(0,'contains(', 'Point2D)', 'boolean'),
  \ javaapi#method(0,'contains(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'contains(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,'intersects(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'intersects(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,'getPathIterator(', 'AffineTransform)', 'PathIterator'),
  \ javaapi#method(0,'getPathIterator(', 'AffineTransform, double)', 'PathIterator'),
  \ ])

call javaapi#class('AreaIterator', '', [
  \ javaapi#method(0,'AreaIterator(', 'Vector, AffineTransform)', ''),
  \ javaapi#method(0,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,'next(', ')', 'void'),
  \ javaapi#method(0,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('CubicCurve2D', '', [
  \ javaapi#method(0,'getX1(', ')', 'double'),
  \ javaapi#method(0,'getY1(', ')', 'double'),
  \ javaapi#method(0,'getP1(', ')', 'Point2D'),
  \ javaapi#method(0,'getCtrlX1(', ')', 'double'),
  \ javaapi#method(0,'getCtrlY1(', ')', 'double'),
  \ javaapi#method(0,'getCtrlP1(', ')', 'Point2D'),
  \ javaapi#method(0,'getCtrlX2(', ')', 'double'),
  \ javaapi#method(0,'getCtrlY2(', ')', 'double'),
  \ javaapi#method(0,'getCtrlP2(', ')', 'Point2D'),
  \ javaapi#method(0,'getX2(', ')', 'double'),
  \ javaapi#method(0,'getY2(', ')', 'double'),
  \ javaapi#method(0,'getP2(', ')', 'Point2D'),
  \ javaapi#method(0,'setCurve(', 'double, double, double, double, double, double, double, double)', 'void'),
  \ javaapi#method(0,'setCurve(', 'double[], int)', 'void'),
  \ javaapi#method(0,'setCurve(', 'Point2D, Point2D, Point2D, Point2D)', 'void'),
  \ javaapi#method(0,'setCurve(', 'Point2D[], int)', 'void'),
  \ javaapi#method(0,'setCurve(', 'CubicCurve2D)', 'void'),
  \ javaapi#method(1,'getFlatnessSq(', 'double, double, double, double, double, double, double, double)', 'double'),
  \ javaapi#method(1,'getFlatness(', 'double, double, double, double, double, double, double, double)', 'double'),
  \ javaapi#method(1,'getFlatnessSq(', 'double[], int)', 'double'),
  \ javaapi#method(1,'getFlatness(', 'double[], int)', 'double'),
  \ javaapi#method(0,'getFlatnessSq(', ')', 'double'),
  \ javaapi#method(0,'getFlatness(', ')', 'double'),
  \ javaapi#method(0,'subdivide(', 'CubicCurve2D, CubicCurve2D)', 'void'),
  \ javaapi#method(1,'subdivide(', 'CubicCurve2D, CubicCurve2D, CubicCurve2D)', 'void'),
  \ javaapi#method(1,'subdivide(', 'double[], int, double[], int, double[], int)', 'void'),
  \ javaapi#method(1,'solveCubic(', 'double[])', 'int'),
  \ javaapi#method(1,'solveCubic(', 'double[], double[])', 'int'),
  \ javaapi#method(0,'contains(', 'double, double)', 'boolean'),
  \ javaapi#method(0,'contains(', 'Point2D)', 'boolean'),
  \ javaapi#method(0,'intersects(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'intersects(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,'contains(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'contains(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,'getBounds(', ')', 'Rectangle'),
  \ javaapi#method(0,'getPathIterator(', 'AffineTransform)', 'PathIterator'),
  \ javaapi#method(0,'getPathIterator(', 'AffineTransform, double)', 'PathIterator'),
  \ javaapi#method(0,'clone(', ')', 'Object'),
  \ ])

call javaapi#class('CubicIterator', '', [
  \ javaapi#method(0,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,'next(', ')', 'void'),
  \ javaapi#method(0,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('Dimension2D', '', [
  \ javaapi#method(0,'getWidth(', ')', 'double'),
  \ javaapi#method(0,'getHeight(', ')', 'double'),
  \ javaapi#method(0,'setSize(', 'double, double)', 'void'),
  \ javaapi#method(0,'setSize(', 'Dimension2D)', 'void'),
  \ javaapi#method(0,'clone(', ')', 'Object'),
  \ ])

call javaapi#class('Ellipse2D', 'RectangularShape', [
  \ javaapi#method(0,'contains(', 'double, double)', 'boolean'),
  \ javaapi#method(0,'intersects(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'contains(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'getPathIterator(', 'AffineTransform)', 'PathIterator'),
  \ javaapi#method(0,'hashCode(', ')', 'int'),
  \ javaapi#method(0,'equals(', 'Object)', 'boolean'),
  \ ])

call javaapi#class('EllipseIterator', '', [
  \ javaapi#method(1,'CtrlVal', '', 'double'),
  \ javaapi#method(0,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,'next(', ')', 'void'),
  \ javaapi#method(0,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('FlatteningPathIterator', '', [
  \ javaapi#method(0,'FlatteningPathIterator(', 'PathIterator, double)', ''),
  \ javaapi#method(0,'FlatteningPathIterator(', 'PathIterator, double, int)', ''),
  \ javaapi#method(0,'getFlatness(', ')', 'double'),
  \ javaapi#method(0,'getRecursionLimit(', ')', 'int'),
  \ javaapi#method(0,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,'next(', ')', 'void'),
  \ javaapi#method(0,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('GeneralPath', 'Path2D$Float', [
  \ javaapi#method(0,'GeneralPath(', ')', ''),
  \ javaapi#method(0,'GeneralPath(', 'int)', ''),
  \ javaapi#method(0,'GeneralPath(', 'int, int)', ''),
  \ javaapi#method(0,'GeneralPath(', 'Shape)', ''),
  \ ])

call javaapi#class('IllegalPathStateException', 'RuntimeException', [
  \ javaapi#method(0,'IllegalPathStateException(', ')', ''),
  \ javaapi#method(0,'IllegalPathStateException(', 'String)', ''),
  \ ])

call javaapi#class('Line2D', '', [
  \ javaapi#method(0,'getX1(', ')', 'double'),
  \ javaapi#method(0,'getY1(', ')', 'double'),
  \ javaapi#method(0,'getP1(', ')', 'Point2D'),
  \ javaapi#method(0,'getX2(', ')', 'double'),
  \ javaapi#method(0,'getY2(', ')', 'double'),
  \ javaapi#method(0,'getP2(', ')', 'Point2D'),
  \ javaapi#method(0,'setLine(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,'setLine(', 'Point2D, Point2D)', 'void'),
  \ javaapi#method(0,'setLine(', 'Line2D)', 'void'),
  \ javaapi#method(1,'relativeCCW(', 'double, double, double, double, double, double)', 'int'),
  \ javaapi#method(0,'relativeCCW(', 'double, double)', 'int'),
  \ javaapi#method(0,'relativeCCW(', 'Point2D)', 'int'),
  \ javaapi#method(1,'linesIntersect(', 'double, double, double, double, double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'intersectsLine(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'intersectsLine(', 'Line2D)', 'boolean'),
  \ javaapi#method(1,'ptSegDistSq(', 'double, double, double, double, double, double)', 'double'),
  \ javaapi#method(1,'ptSegDist(', 'double, double, double, double, double, double)', 'double'),
  \ javaapi#method(0,'ptSegDistSq(', 'double, double)', 'double'),
  \ javaapi#method(0,'ptSegDistSq(', 'Point2D)', 'double'),
  \ javaapi#method(0,'ptSegDist(', 'double, double)', 'double'),
  \ javaapi#method(0,'ptSegDist(', 'Point2D)', 'double'),
  \ javaapi#method(1,'ptLineDistSq(', 'double, double, double, double, double, double)', 'double'),
  \ javaapi#method(1,'ptLineDist(', 'double, double, double, double, double, double)', 'double'),
  \ javaapi#method(0,'ptLineDistSq(', 'double, double)', 'double'),
  \ javaapi#method(0,'ptLineDistSq(', 'Point2D)', 'double'),
  \ javaapi#method(0,'ptLineDist(', 'double, double)', 'double'),
  \ javaapi#method(0,'ptLineDist(', 'Point2D)', 'double'),
  \ javaapi#method(0,'contains(', 'double, double)', 'boolean'),
  \ javaapi#method(0,'contains(', 'Point2D)', 'boolean'),
  \ javaapi#method(0,'intersects(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'intersects(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,'contains(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'contains(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,'getBounds(', ')', 'Rectangle'),
  \ javaapi#method(0,'getPathIterator(', 'AffineTransform)', 'PathIterator'),
  \ javaapi#method(0,'getPathIterator(', 'AffineTransform, double)', 'PathIterator'),
  \ javaapi#method(0,'clone(', ')', 'Object'),
  \ ])

call javaapi#class('LineIterator', '', [
  \ javaapi#method(0,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,'next(', ')', 'void'),
  \ javaapi#method(0,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('NoninvertibleTransformException', 'Exception', [
  \ javaapi#method(0,'NoninvertibleTransformException(', 'String)', ''),
  \ ])

call javaapi#class('Path2D', '', [
  \ javaapi#method(1,'WIND_EVEN_ODD', '', 'int'),
  \ javaapi#method(1,'WIND_NON_ZERO', '', 'int'),
  \ javaapi#method(0,'moveTo(', 'double, double)', 'void'),
  \ javaapi#method(0,'lineTo(', 'double, double)', 'void'),
  \ javaapi#method(0,'quadTo(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,'curveTo(', 'double, double, double, double, double, double)', 'void'),
  \ javaapi#method(0,'closePath(', ') // [synchronized] ', 'void'),
  \ javaapi#method(0,'append(', 'Shape, boolean)', 'void'),
  \ javaapi#method(0,'append(', 'PathIterator, boolean)', 'void'),
  \ javaapi#method(0,'getWindingRule(', ') // [synchronized] ', 'int'),
  \ javaapi#method(0,'setWindingRule(', 'int)', 'void'),
  \ javaapi#method(0,'getCurrentPoint(', ') // [synchronized] ', 'Point2D'),
  \ javaapi#method(0,'reset(', ') // [synchronized] ', 'void'),
  \ javaapi#method(0,'transform(', 'AffineTransform)', 'void'),
  \ javaapi#method(0,'createTransformedShape(', 'AffineTransform) // [synchronized] ', 'Shape'),
  \ javaapi#method(0,'getBounds(', ')', 'Rectangle'),
  \ javaapi#method(1,'contains(', 'PathIterator, double, double)', 'boolean'),
  \ javaapi#method(1,'contains(', 'PathIterator, Point2D)', 'boolean'),
  \ javaapi#method(0,'contains(', 'double, double)', 'boolean'),
  \ javaapi#method(0,'contains(', 'Point2D)', 'boolean'),
  \ javaapi#method(1,'contains(', 'PathIterator, double, double, double, double)', 'boolean'),
  \ javaapi#method(1,'contains(', 'PathIterator, Rectangle2D)', 'boolean'),
  \ javaapi#method(0,'contains(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'contains(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(1,'intersects(', 'PathIterator, double, double, double, double)', 'boolean'),
  \ javaapi#method(1,'intersects(', 'PathIterator, Rectangle2D)', 'boolean'),
  \ javaapi#method(0,'intersects(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'intersects(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,'getPathIterator(', 'AffineTransform, double)', 'PathIterator'),
  \ javaapi#method(0,'clone(', ')', 'Object'),
  \ ])

call javaapi#interface('PathIterator', '', [
  \ javaapi#method(1,'WIND_EVEN_ODD', '', 'int'),
  \ javaapi#method(1,'WIND_NON_ZERO', '', 'int'),
  \ javaapi#method(1,'SEG_MOVETO', '', 'int'),
  \ javaapi#method(1,'SEG_LINETO', '', 'int'),
  \ javaapi#method(1,'SEG_QUADTO', '', 'int'),
  \ javaapi#method(1,'SEG_CUBICTO', '', 'int'),
  \ javaapi#method(1,'SEG_CLOSE', '', 'int'),
  \ javaapi#method(0,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,'next(', ')', 'void'),
  \ javaapi#method(0,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('Point2D', '', [
  \ javaapi#method(0,'getX(', ')', 'double'),
  \ javaapi#method(0,'getY(', ')', 'double'),
  \ javaapi#method(0,'setLocation(', 'double, double)', 'void'),
  \ javaapi#method(0,'setLocation(', 'Point2D)', 'void'),
  \ javaapi#method(1,'distanceSq(', 'double, double, double, double)', 'double'),
  \ javaapi#method(1,'distance(', 'double, double, double, double)', 'double'),
  \ javaapi#method(0,'distanceSq(', 'double, double)', 'double'),
  \ javaapi#method(0,'distanceSq(', 'Point2D)', 'double'),
  \ javaapi#method(0,'distance(', 'double, double)', 'double'),
  \ javaapi#method(0,'distance(', 'Point2D)', 'double'),
  \ javaapi#method(0,'clone(', ')', 'Object'),
  \ javaapi#method(0,'hashCode(', ')', 'int'),
  \ javaapi#method(0,'equals(', 'Object)', 'boolean'),
  \ ])

call javaapi#class('QuadCurve2D', '', [
  \ javaapi#method(0,'getX1(', ')', 'double'),
  \ javaapi#method(0,'getY1(', ')', 'double'),
  \ javaapi#method(0,'getP1(', ')', 'Point2D'),
  \ javaapi#method(0,'getCtrlX(', ')', 'double'),
  \ javaapi#method(0,'getCtrlY(', ')', 'double'),
  \ javaapi#method(0,'getCtrlPt(', ')', 'Point2D'),
  \ javaapi#method(0,'getX2(', ')', 'double'),
  \ javaapi#method(0,'getY2(', ')', 'double'),
  \ javaapi#method(0,'getP2(', ')', 'Point2D'),
  \ javaapi#method(0,'setCurve(', 'double, double, double, double, double, double)', 'void'),
  \ javaapi#method(0,'setCurve(', 'double[], int)', 'void'),
  \ javaapi#method(0,'setCurve(', 'Point2D, Point2D, Point2D)', 'void'),
  \ javaapi#method(0,'setCurve(', 'Point2D[], int)', 'void'),
  \ javaapi#method(0,'setCurve(', 'QuadCurve2D)', 'void'),
  \ javaapi#method(1,'getFlatnessSq(', 'double, double, double, double, double, double)', 'double'),
  \ javaapi#method(1,'getFlatness(', 'double, double, double, double, double, double)', 'double'),
  \ javaapi#method(1,'getFlatnessSq(', 'double[], int)', 'double'),
  \ javaapi#method(1,'getFlatness(', 'double[], int)', 'double'),
  \ javaapi#method(0,'getFlatnessSq(', ')', 'double'),
  \ javaapi#method(0,'getFlatness(', ')', 'double'),
  \ javaapi#method(0,'subdivide(', 'QuadCurve2D, QuadCurve2D)', 'void'),
  \ javaapi#method(1,'subdivide(', 'QuadCurve2D, QuadCurve2D, QuadCurve2D)', 'void'),
  \ javaapi#method(1,'subdivide(', 'double[], int, double[], int, double[], int)', 'void'),
  \ javaapi#method(1,'solveQuadratic(', 'double[])', 'int'),
  \ javaapi#method(1,'solveQuadratic(', 'double[], double[])', 'int'),
  \ javaapi#method(0,'contains(', 'double, double)', 'boolean'),
  \ javaapi#method(0,'contains(', 'Point2D)', 'boolean'),
  \ javaapi#method(0,'intersects(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'intersects(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,'contains(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'contains(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,'getBounds(', ')', 'Rectangle'),
  \ javaapi#method(0,'getPathIterator(', 'AffineTransform)', 'PathIterator'),
  \ javaapi#method(0,'getPathIterator(', 'AffineTransform, double)', 'PathIterator'),
  \ javaapi#method(0,'clone(', ')', 'Object'),
  \ ])

call javaapi#class('QuadIterator', '', [
  \ javaapi#method(0,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,'next(', ')', 'void'),
  \ javaapi#method(0,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('RectIterator', '', [
  \ javaapi#method(0,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,'next(', ')', 'void'),
  \ javaapi#method(0,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('Rectangle2D', 'RectangularShape', [
  \ javaapi#method(1,'OUT_LEFT', '', 'int'),
  \ javaapi#method(1,'OUT_TOP', '', 'int'),
  \ javaapi#method(1,'OUT_RIGHT', '', 'int'),
  \ javaapi#method(1,'OUT_BOTTOM', '', 'int'),
  \ javaapi#method(0,'setRect(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,'setRect(', 'Rectangle2D)', 'void'),
  \ javaapi#method(0,'intersectsLine(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'intersectsLine(', 'Line2D)', 'boolean'),
  \ javaapi#method(0,'outcode(', 'double, double)', 'int'),
  \ javaapi#method(0,'outcode(', 'Point2D)', 'int'),
  \ javaapi#method(0,'setFrame(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,'getBounds2D(', ')', 'Rectangle2D'),
  \ javaapi#method(0,'contains(', 'double, double)', 'boolean'),
  \ javaapi#method(0,'intersects(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'contains(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'createIntersection(', 'Rectangle2D)', 'Rectangle2D'),
  \ javaapi#method(1,'intersect(', 'Rectangle2D, Rectangle2D, Rectangle2D)', 'void'),
  \ javaapi#method(0,'createUnion(', 'Rectangle2D)', 'Rectangle2D'),
  \ javaapi#method(1,'union(', 'Rectangle2D, Rectangle2D, Rectangle2D)', 'void'),
  \ javaapi#method(0,'add(', 'double, double)', 'void'),
  \ javaapi#method(0,'add(', 'Point2D)', 'void'),
  \ javaapi#method(0,'add(', 'Rectangle2D)', 'void'),
  \ javaapi#method(0,'getPathIterator(', 'AffineTransform)', 'PathIterator'),
  \ javaapi#method(0,'getPathIterator(', 'AffineTransform, double)', 'PathIterator'),
  \ javaapi#method(0,'hashCode(', ')', 'int'),
  \ javaapi#method(0,'equals(', 'Object)', 'boolean'),
  \ ])

call javaapi#class('RectangularShape', '', [
  \ javaapi#method(0,'getX(', ')', 'double'),
  \ javaapi#method(0,'getY(', ')', 'double'),
  \ javaapi#method(0,'getWidth(', ')', 'double'),
  \ javaapi#method(0,'getHeight(', ')', 'double'),
  \ javaapi#method(0,'getMinX(', ')', 'double'),
  \ javaapi#method(0,'getMinY(', ')', 'double'),
  \ javaapi#method(0,'getMaxX(', ')', 'double'),
  \ javaapi#method(0,'getMaxY(', ')', 'double'),
  \ javaapi#method(0,'getCenterX(', ')', 'double'),
  \ javaapi#method(0,'getCenterY(', ')', 'double'),
  \ javaapi#method(0,'getFrame(', ')', 'Rectangle2D'),
  \ javaapi#method(0,'isEmpty(', ')', 'boolean'),
  \ javaapi#method(0,'setFrame(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,'setFrame(', 'Point2D, Dimension2D)', 'void'),
  \ javaapi#method(0,'setFrame(', 'Rectangle2D)', 'void'),
  \ javaapi#method(0,'setFrameFromDiagonal(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,'setFrameFromDiagonal(', 'Point2D, Point2D)', 'void'),
  \ javaapi#method(0,'setFrameFromCenter(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,'setFrameFromCenter(', 'Point2D, Point2D)', 'void'),
  \ javaapi#method(0,'contains(', 'Point2D)', 'boolean'),
  \ javaapi#method(0,'intersects(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,'contains(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,'getBounds(', ')', 'Rectangle'),
  \ javaapi#method(0,'getPathIterator(', 'AffineTransform, double)', 'PathIterator'),
  \ javaapi#method(0,'clone(', ')', 'Object'),
  \ ])

call javaapi#class('RoundRectIterator', '', [
  \ javaapi#method(0,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,'next(', ')', 'void'),
  \ javaapi#method(0,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('RoundRectangle2D', 'RectangularShape', [
  \ javaapi#method(0,'getArcWidth(', ')', 'double'),
  \ javaapi#method(0,'getArcHeight(', ')', 'double'),
  \ javaapi#method(0,'setRoundRect(', 'double, double, double, double, double, double)', 'void'),
  \ javaapi#method(0,'setRoundRect(', 'RoundRectangle2D)', 'void'),
  \ javaapi#method(0,'setFrame(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,'contains(', 'double, double)', 'boolean'),
  \ javaapi#method(0,'intersects(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'contains(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,'getPathIterator(', 'AffineTransform)', 'PathIterator'),
  \ javaapi#method(0,'hashCode(', ')', 'int'),
  \ javaapi#method(0,'equals(', 'Object)', 'boolean'),
  \ ])

